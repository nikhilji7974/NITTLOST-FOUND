<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Posts</title>
    <style>
        body {
            background-color: #e0f7fa; /* Soft cyan background */
            color: #333; /* Darker text color for contrast */
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
        }

        .container {
            display: flex;
            flex-direction: column; /* Stack posts vertically */
            align-items: center; /* Center posts horizontally */
            padding: 30px;
            gap: 25px; /* Space between posts */
        }

        .post {
            background-color: #ffffff; /* White background for posts */
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Subtle shadow for posts */
            width: 40vw; /* Set each post to 40% of the viewport width */
            box-sizing: border-box; /* Include padding and border in element's total width and height */
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .post:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2); /* More pronounced shadow on hover */
        }

        .post-header {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .circle {
            width: 45px; /* Circle size */
            height: 45px; /* Circle size */
            background-color: #00796b; /* Teal background color */
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px; /* Font size for the initial */
            margin-right: 20px; /* Space between circle and username */
        }

        .post-header h3 {
            margin: 0; /* Remove default margin for better alignment */
            font-size: 20px; /* Font size for the username */
            color: #00796b; /* Matching username color with circle */
        }

        .post p {
            margin: 12px 0; /* Add margin for spacing */
            font-size: 17px; /* Font size for the details */
            line-height: 1.5; /* Improve readability */
        }

        .post img {
            max-width: 100%;
            height: auto;
            border-radius: 10px;
            margin-top: 15px;
            display: block;
            margin-left: auto;
            margin-right: auto; /* Center the image */
        }

        @media (max-width: 768px) {
            .post {
                width: 80vw; /* Adjust post width on medium screens */
            }
        }

        @media (max-width: 480px) {
            .post {
                width: 90vw; /* Adjust post width on small screens */
            }
        }

        .hidden {
            display: none; /* Hide content initially */
        }
    </style>
</head>

<body>
    <div id="loading" class="container">
        <h1>Loading...</h1>
    </div>
    <div id="header" class="hidden"><%- include('header') %></div>
    <div class="container hidden" id="posts-container"></div>
    <div id="footer" class="hidden"><%- include('footer') %></div>

    <script>
        window.onload = function(event) {
            const token = localStorage.getItem('token');

            fetch('/user/posts', {
                method: "GET",
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                },
            })
            .then(response => {
                var a = 0;
                if (response.status === 401) {
                    // If the token is invalid or missing, redirect to the login page
                    alert('Session expired or invalid token. Redirecting to login.');
                    a = 1;
                }
                if (a == 1) {
                    window.location.href = '/login';
                }
                return response.json();
            })
            .then(data => {
                const loadingDiv = document.getElementById('loading');
                const header = document.getElementById('header');
                const postsContainer = document.getElementById('posts-container');
                const footer = document.getElementById('footer');

                if (data.success == 1) {
                    // Show header, posts container, and footer
                    loadingDiv.classList.add('hidden');
                    header.classList.remove('hidden');
                    postsContainer.classList.remove('hidden');
                    footer.classList.remove('hidden');

                    const posts = data.allposts;

                    posts.forEach(post => {
                        const postElement = document.createElement('div');
                        postElement.className = 'post';

                        // Extract the first letter of the user's name
                        const userInitial = post.userName.charAt(0).toUpperCase();
                        const username = post.userName;

                        // Build the HTML for each post
                        postElement.innerHTML = `
                            <div class="post-header">
                                <div class="circle">${userInitial}</div>
                                <h3>${username}</h3>
                            </div>
                            <p>${post.details}</p>
                            <img src="${post.photo}" alt="Post Image">
                        `;

                        // Append the post to the container
                        postsContainer.appendChild(postElement);
                    });
                } else {
                    alert('There was an error fetching the posts.');
                }
            })
            .catch(error => {
                console.error('Error fetching posts:', error);
            });
        }
    </script>
</body>

</html>
