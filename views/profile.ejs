<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
        }
        .profile-container {
            text-align: center;
            margin-top: 30px;
            padding: 20px;
            background-color: #ffffff;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            width: 100%;
            max-width: 600px;
        }
        .profile-circle {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background-color: #3515d7;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 36px;
            font-weight: bold;
            margin: 0 auto;
            margin-bottom: 20px;
        }
        .profile-details {
            font-size: 18px;
            color: #333;
            margin-bottom: 10px;
        }
        .change-password {
            margin: 20px 0;
        }
        .change-password a {
            text-decoration: none;
            color: #3515d7;
            font-size: 16px;
            border: 2px solid #3515d7;
            padding: 8px 16px;
            border-radius: 5px;
            transition: background-color 0.3s, color 0.3s;
        }
        .change-password a:hover {
            background-color: #3515d7;
            color: white;
        }
        .posts-container {
            margin-top: 30px;
            width: 100%;
            max-width: 600px;
        }
        .post {
            background-color: #ebeded;
            padding: 15px;
            margin-bottom: 20px;
            border-radius: 10px;
            box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
            text-align: center;
        }
        .post-header {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 10px;
        }
        .post-header .circle {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: #3515d7;
            color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 20px;
            font-weight: bold;
            margin-right: 10px;
        }
        .post-header .username {
            font-size: 16px;
            font-weight: bold;
            color: #3515d7;
        }
        .post-details {
            font-size: 14px;
            color: #333;
            margin-top: 10px;
        }
        .post-image {
            margin-top: 10px;
            width: auto;
            max-width: 100%;
            height: auto;
            border-radius: 10px;
            display: block;
            margin-left: auto;
            margin-right: auto;
        }
        .post-actions {
            margin-top: 10px;
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        .post-actions button {
            background-color: #ff4d4d;
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .post-actions button.update {
            background-color: #4caf50;
        }
        .post-actions button:hover {
            opacity: 0.8;
        }
        .makepostbutton {
            margin-bottom: 5px;
        }
        .noposts {
            color: rgb(44, 44, 45);
        }
    </style>
</head>
<body>
    <%- include('header') %>
    <div class="profile-container" id="profilecontainer">
    </div>
    <div class="change-password">
        <a id="changepassword" href="/changepassword">Change Password</a>
    </div>
    <button onclick="logout()" class="logout-button" id="logoutButton">Logout</button>
    <div class="posts-container" id="postsContainer">
    </div>
    <%- include('footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const token = localStorage.getItem('token');
            fetch('/user/profile', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${token}`,
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.status === 401) {
                    alert('Session expired or invalid token. Redirecting to login.');
                    window.location.href = '/login';
                    return;
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    const userinfo = data.user;
                    
                    const profilecontainer = document.getElementById('profilecontainer');
                    const profilecircle = document.createElement('div');
                    profilecircle.classList.add('profile-circle');
                    profilecircle.innerHTML = userinfo.name.charAt(0).toUpperCase();
                    profilecontainer.appendChild(profilecircle);

                    const profilename = document.createElement('div');
                    profilename.classList.add('profile-details');
                    profilename.textContent = userinfo.name;
                    profilecontainer.appendChild(profilename);

                    const profileemail = document.createElement('div');
                    profileemail.classList.add('profile-details');
                    profileemail.textContent = userinfo.email;
                    profilecontainer.appendChild(profileemail);

                    const profilestudentid = document.createElement('div');
                    profilestudentid.classList.add('profile-details');
                    profilestudentid.textContent = userinfo.studentId;
                    profilecontainer.appendChild(profilestudentid);

                    const postsContainer = document.getElementById('postsContainer');
                    
                    if (userinfo.posts.length === 0) {
                        const noposts = document.createElement('div');
                        noposts.classList.add('noposts');
                        noposts.innerHTML = `
                            <h1>You have not posted anything yet...</h1>
                            <button class="makepostbutton" onclick="makePost()">Make Post</button>
                        `;
                        postsContainer.appendChild(noposts);
                    } else {
                        userinfo.posts.forEach(post => {
                            const postElement = document.createElement('div');
                            postElement.classList.add('post');
                            postElement.setAttribute('post-post-id', post._id);
                            postElement.innerHTML = `
                                <div class="post-header">
                                    <div class="circle">${userinfo.name.charAt(0).toUpperCase()}</div>
                                    <div class="username">${userinfo.name}</div>
                                </div>
                                <div class="post-details">${post.details}</div>
                                ${post.photo ? `<img src="${post.photo}" alt="Post Image" class="post-image">` : ''}
                                <div class="post-actions">
                                    <button class="update" id="updatepost-${post._id}">Update</button>
                                    <button class="delete" id="deletepost-${post._id}">Delete</button>
                                </div>
                            `;
                            postsContainer.appendChild(postElement);

                            document.getElementById(`deletepost-${post._id}`).addEventListener('click', function() {
                                deletePost(post._id, postElement);
                            });

                            document.getElementById(`updatepost-${post._id}`).addEventListener('click', function() {
                                updatePost(post._id);
                            });
                        });
                    }
                }
            })
            .catch(error => {
                console.error('Error fetching profile or posts:', error);
            });
        });

        function deletePost(postId, postElement) {
            if (confirm('Are you sure you want to delete the post?')) {
                const token = localStorage.getItem('token');
                fetch(`/user/post/delete/${postId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`,
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Post deleted successfully.');
                        postElement.remove(); // Remove the post from the DOM
                    } else {
                        alert('Failed to delete post.');
                    }
                })
                .catch(error => {
                    console.error('Error deleting post:', error);
                });
            }
        }

        function makePost() {
            window.location.href = '/makepost';
        }

        function updatePost(postId) {
            localStorage.setItem('postidforupdate', postId);
            window.location.href = '/updatePost';
        }

        function logout() {
            localStorage.removeItem('token');
            localStorage.removeItem('postidforupdate');
            window.location.href = '/';
        }
    </script>
</body>
</html>
